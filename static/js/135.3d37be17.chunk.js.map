{"version":3,"file":"static/js/135.3d37be17.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie-info-block\":\"MovieDetails_movie-info-block__ebNsl\",\"back-link-container\":\"MovieDetails_back-link-container__yunBe\",\"back-link\":\"MovieDetails_back-link__B4hAm\",\"movie-title\":\"MovieDetails_movie-title__GN5sQ\",\"text-block\":\"MovieDetails_text-block__ral89\",\"title-block\":\"MovieDetails_title-block__wem3p\",\"additional-info-block\":\"MovieDetails_additional-info-block__vgLQ9\",\"additional-info-block-title\":\"MovieDetails_additional-info-block-title__gUP9s\",\"info-link-list\":\"MovieDetails_info-link-list__r1ce7\",\"info-link\":\"MovieDetails_info-link__64wgV\"};","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { requestMovieDetails } from 'services/api';\nimport { toast } from 'react-toastify';\nimport { GoArrowLeft } from 'react-icons/go';\nimport css from './MovieDetails.module.css';\nimport img from '../../img/no-photo-icon-22.png';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieDetails = await requestMovieDetails(movieId);\n        setMovieInfo(movieDetails);\n      } catch (error) {\n        toast(error.message);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const releaseDate = new Date(movieInfo.release_date);\n  const releaseYear = releaseDate.getFullYear();\n\n  return (\n    <main className={css.container}>\n      <div className={css['back-link-container']}>\n        <Link to={backLinkRef.current} className={css['back-link']}>\n          <GoArrowLeft />\n          <span>Go back</span>\n        </Link>\n      </div>\n      <section className={css['movie-info-block']}>\n        <img\n          src={\n            movieInfo.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movieInfo.poster_path}`\n              : img\n          }\n          alt={movieInfo.original_title}\n        />\n        <div className={css['movie-description']}>\n          <h1 className={css['movie-title']}>\n            {movieInfo.original_title} ({releaseYear ? releaseYear : ''})\n          </h1>\n          <p className={css['text-block']}>\n            User score: {Math.round(movieInfo.vote_average * 10)}%\n          </p>\n          <h2 className={css['title-block']}>Overview</h2>\n          <p className={css['text-block']}>{movieInfo.overview}</p>\n          <h2 className={css['title-block']}>Genres</h2>\n          <p className={css['text-block']}>\n            {movieInfo.genres?.map(genre => genre.name).join(' ')}\n          </p>\n        </div>\n      </section>\n      <div className={css.line}></div>\n      <section className={css['additional-info-block']}>\n        <p className={css['additional-info-block-title']}>\n          Additional information\n        </p>\n        <ul className={css['info-link-list']}>\n          <li className={css['info-link-item']}>\n            <Link className={css['info-link']} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li className={css['info-link-item']}>\n            <Link className={css['info-link']} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </section>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_location$state$from","_location$state","_movieInfo$genres","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","requestMovieDetails","sent","t0","toast","message","stop","apply","arguments","releaseYear","Date","release_date","getFullYear","_jsxs","className","css","children","_jsx","Link","to","current","GoArrowLeft","src","poster_path","concat","img","alt","original_title","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}